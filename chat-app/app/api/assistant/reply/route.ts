import { type NextRequest, NextResponse } from "next/server"

export async function POST(request: NextRequest) {
  try {
    const { message, history } = await request.json()

    // Simulate API processing time
    await new Promise((resolve) => setTimeout(resolve, 1000 + Math.random() * 2000))

    // Mock AI response based on user input and history
    const contextualResponse = generateContextualResponse(message, history)

    return NextResponse.json({
      reply: contextualResponse,
    })
  } catch (error) {
    console.error("API Error:", error)
    return NextResponse.json({ error: "Failed to generate response" }, { status: 500 })
  }
}

function generateContextualResponse(message: string, history: any[]): string {
  const messageCount = history.filter((msg) => msg.role === "user").length
  const isFirstMessage = messageCount === 1

  if (isFirstMessage) {
    return `# Welcome! 👋

Thank you for your message: **"${message}"**

I'm your AI assistant, ready to help with a wide variety of tasks:

## What I Can Do:
- 💬 **Conversational AI** - Natural dialogue and Q&A
- 📝 **Content Creation** - Writing, editing, and brainstorming  
- 🔍 **Analysis & Research** - Data interpretation and insights
- 💻 **Technical Help** - Programming, troubleshooting, and explanations
- 🎨 **Creative Tasks** - Ideas, stories, and creative solutions

## Getting Started:
Feel free to ask me anything! I'll provide detailed, helpful responses tailored to your needs.

*This response was generated by the backend API with conversation context.*`
  }

  // Generate contextual responses based on message content
  const lowerMessage = message.toLowerCase()

  if (lowerMessage.includes("code") || lowerMessage.includes("programming")) {
    return `## Code & Programming Response

You asked about: **"${message}"**

Here's my technical response:

\`\`\`javascript
// Example code snippet
function handleUserQuery(query) {
  const response = processQuery(query);
  return {
    success: true,
    data: response,
    timestamp: new Date().toISOString()
  };
}
\`\`\`

### Key Points:
- ✅ **Best Practices** - Following industry standards
- 🔧 **Optimization** - Performance-focused solutions  
- 📚 **Documentation** - Clear, maintainable code
- 🧪 **Testing** - Robust error handling

*Message ${messageCount} in our conversation - API-generated response*`
  }

  if (lowerMessage.includes("help") || lowerMessage.includes("how")) {
    return `## Help & Guidance

**Your Question:** "${message}"

### Here's How I Can Assist:

1. **Step-by-Step Solutions** 📋
   - Break down complex problems
   - Provide actionable guidance
   - Offer multiple approaches

2. **Detailed Explanations** 🔍  
   - Clear, comprehensive answers
   - Context and background information
   - Real-world examples

3. **Follow-up Support** 🤝
   - Answer clarifying questions
   - Provide additional resources
   - Adapt to your specific needs

> **Conversation Context:** This is message #${messageCount} in our chat. I'm building on our previous discussion to provide more relevant assistance.

*Generated via backend API with full conversation history*`
  }

  // Default contextual response
  return `## AI Response to: "${message}"

### Contextual Analysis:
- 📊 **Message Count:** ${messageCount} messages in this conversation
- 🕒 **Generated:** ${new Date().toLocaleString()}
- 🔄 **Context Aware:** Using full conversation history

### My Response:
I understand you're asking about **"${message}"**. Based on our conversation so far, I can provide detailed insights and assistance.

### Key Features of This Response:
- 🎯 **Personalized** - Tailored to your specific query
- 📈 **Contextual** - Considers our entire conversation
- 🔄 **Dynamic** - Generated fresh from the backend API
- ✨ **Markdown Formatted** - Rich text with proper styling

### What's Next?
Feel free to ask follow-up questions or explore new topics. I'm here to help with:

- **Analysis & Insights** 🔍
- **Creative Solutions** 💡  
- **Technical Guidance** ⚙️
- **Detailed Explanations** 📚

*This response was dynamically generated by the backend API using your message and conversation history.*`
}
